<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Plant Disease Identifier</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          fontFamily: {
            sans: ['Inter', 'sans-serif'],
          },
        },
      },
    };
  </script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
  </style>
</head>

<body class="bg-gray-50 flex items-center justify-center min-h-screen p-4 font-sans">
  <form action="/upload-plant-disease" method="POST" enctype="multipart/form-data" class="w-full max-w-2xl bg-white rounded-xl shadow-lg p-6 md:p-8">
    <header class="text-center mb-8">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-800 mb-2">ðŸŒ¿ Plant Disease Identifier</h1>
      <p class="text-gray-500 text-sm md:text-base">Upload a picture of a plant to identify potential diseases.</p>
    </header>

    <div class="mb-6">
      <label for="language-select" class="block text-sm font-medium text-gray-700 mb-2">Select Language</label>
      <select id="language-select" name="language" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        <option value="english">English</option>
        <option value="hindi">Hindi</option>
        <option value="marathi">Marathi</option>
        <option value="french">French</option>
        <option value="german">German</option>
        <option value="chinese">Chinese</option>
        <option value="other">Other</option>
      </select>
    </div>

    <div id="other-language-container" class="mb-6 hidden">
      <label for="other-language" class="block text-sm font-medium text-gray-700 mb-2">Specify Language</label>
      <input type="text" id="other-language" name="other_language" placeholder="e.g., Spanish" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
    </div>

    <div id="drop-area" class="relative w-full h-64 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center cursor-pointer hover:border-blue-500 transition-colors duration-200">
      <input type="file" name="image" id="image-upload" accept="image/*" class="absolute inset-0 opacity-0 cursor-pointer" required />
      <div class="text-center" id="upload-message">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M7 16a4 4 0 01-4-4v-1a4 4 0 014-4h10a4 4 0 014 4v1a4 4 0 01-4 4H7zM16 16h-4M12 8v8M9 12h6" />
        </svg>
        <p class="mt-2 text-sm text-gray-600"><span class="font-semibold">Click to upload</span> or drag and drop</p>
        <p class="text-xs text-gray-500">PNG, JPG, GIF up to 10MB</p>
      </div>
      <img id="image-preview" src="#" alt="Image preview"
        class="hidden absolute inset-0 w-full h-full object-contain p-2 rounded-lg" />
    </div>

        <%-include("partials/loder.ejs")%>


    <button type="submit" class="w-full mt-6 bg-blue-600 text-white font-semibold py-3 rounded-lg shadow-md hover:bg-blue-700 transition-colors duration-200">
      Analyze Image
    </button>
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const imageUpload = document.getElementById('image-upload');
      const dropArea = document.getElementById('drop-area');
      const imagePreview = document.getElementById('image-preview');
      const uploadMessage = document.getElementById('upload-message');
      const languageSelect = document.getElementById('language-select');
      const otherLanguageContainer = document.getElementById('other-language-container');

      dropArea.addEventListener('click', () => imageUpload.click());

      dropArea.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropArea.classList.add('border-blue-500');
      });

      dropArea.addEventListener('dragleave', () => {
        dropArea.classList.remove('border-blue-500');
      });

      dropArea.addEventListener('drop', (e) => {
        e.preventDefault();
        dropArea.classList.remove('border-blue-500');
        const files = e.dataTransfer.files;
        if (files.length > 0) {
          imageUpload.files = files;
          previewImage(files[0]);
        }
      });

      imageUpload.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
          previewImage(file);
        }
      });

      function previewImage(file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          imagePreview.src = e.target.result;
          imagePreview.classList.remove('hidden');
          uploadMessage.classList.add('hidden');
        };
        reader.readAsDataURL(file);
      }

      languageSelect.addEventListener('change', (e) => {
        if (e.target.value === 'other') {
          otherLanguageContainer.classList.remove('hidden');
        } else {
          otherLanguageContainer.classList.add('hidden');
        }
      });
    });
  </script>
</body>

</html>